-- $Id$
-- DESCRIPTION :
-- -------------
-- Ces vues sont utilisées dans l'écran PC_VISU_SEL.fmb           
--
-- HISTORIQUE DES MODIFICATIONS : 
-- -------------------------------------------------------------------------
-- Ver,Date    ,Auteur Description
-- -------------------------------------------------------------------------
-- 05b, 30.10.14,croc  Ajout colonne etat_atv_pc_uee dans vue V_PC_SEL_ETAPE_LIG_COM
-- 05a,21.01.14,mnev   Ajout colonne etat_autor_porl (autorisation preordo ligne)
-- 04a,06.01.14,mnev   Ajout colonne id_res_porl (gestion preordo ligne)
-- 03s,16.09.13,mnev   Supprime risque de division par zero sur 
--                     V_PC_SEL_RGP_LIG_COM_FAST (vu sur prepa echantillon)
-- 03r,16.05.13,mnev   Corrige v_pc_sel_etat_atv pour traduction des libellés
-- 03q,03.08.12,mnev   supprime table inutile dans clasue FROM
--                     dans la vue V_PC_SEL_RGP_LIG_COM
-- 03p,02.07.12,alfl   Ajout colonne ETAT_ATV_PC_LIG_COM_RGP pour consolider 
--                     par etape et afficher le réel ETAT_ATV_PC_LIG_COM
-- 03o,10.04.12,alfl   modification de V_PC_SEL_ETAT_ATV et V_PC_SEL_RGP_LIG_COM
--                     pour intégrer les lignes usines sans lignes de prepa
-- 03n,03.08.11,mnev   ajout conversion si uee de référence pour nb_col_cde
-- 03m,30.05.11,mnev   ajout test IS NULL sur visibilité
-- 03l,23.03.11,alfl   si ligne-com annulée ou soldée on force l'etat_atv a PRP0 
--                     dans la vue V_PC_SEL_RGP_LIG_COM
-- 03k,21.02.11,mnev   Change le filtrage usine et atelier
-- 03j,27.01.11,rleb   Extrait le colis de référence no_uee_ref si vide
-- 03i,27.07.10,mnev   Ajout cod_ut, typ_ut de l'UEE           
-- 03h,27.07.10,rbel   Ajout cod_etape dans v_pc_rgp_lig_com
-- 03g,26.04.10,rbel   Ajout champ etat_autor_ord et etat_autor_pord
-- 03f,30.09.09,alfl   Ajout des champs typ_cmd
-- 03e,20.08.09,alfl   Ajout des champs niv_prio_uee_det
-- 03d,15.07.09,mnev   Ajout des champs cod_ut_sup,typ_ut_sup,cod_ut,typ_ut
-- 03c,02.03.09,mnev   Amélioration perf sur V_PC_SEL_ETAPE_LIG_COM.
-- 03b,12.02.09,mnev   Dans rgp_lig_com : 
--                     Ajout colonne ETAT_NON_PRP. Ajout NVL du cod_err.
-- 03a,28.01.09,mnev   Suppression des libellés dans les vues
--                     => modification dans pcselpkg pour récup des libellés
-- 02a,27.10.08,mnev   Gestion nb_col_theo de PC_UEE.
-- 01a,29.05.07,mnev   version initiale
-- -------------------------------------------------------------------------

-- Vue sur les etat_atv paramétrés
CREATE OR REPLACE VIEW V_PC_SEL_ETAT_ATV AS
SELECT DISTINCT a.par ETAT_ATV, b.par COD_ETAPE, SUBSTR(b.su_lig_par,1,200) LIB_ETAPE, b.NO_ORD, 
                b.action_lig_par_1 visual_lib, b.action_lig_par_2 visual_qte, 
                b.action_lig_par_3 visual_qte0 
FROM su_lig_par a, vf_su_lig_par b
WHERE a.nom_par IN ('ETAT_ATV_PC_LIG_COM', 'ETAT_ATV_PC_UEE', 'ETAT_ATV_PC_UEE_DET') AND
      a.action_lig_par_2 = b.par AND
	  b.nom_par = 'ETAT_ATV_PC_RGP'
UNION
SELECT par ETAT_ATV, par COD_ETAPE, SUBSTR(su_lig_par,1,200) LIB_ETAPE, NO_ORD, 
       action_lig_par_1 visual_lib, action_lig_par_2 visual_qte, 
       action_lig_par_3 visual_qte0 
FROM vf_su_lig_par 
WHERE nom_par = 'ETAT_ATV_PC_RGP' AND PAR='NINT'
      
/      
show errors;
-- Vue sur les libelles spécialises   
CREATE OR REPLACE VIEW V_PC_SEL_LIB_XXX AS
SELECT l.cod_pro||'/'||l.cod_vl cod_xxx, su_bas_gcl_su_ul(l.cod_pro,l.cod_vl, 'LIB_UL') lib_xxx
FROM pc_lig_com l
/
show errors;

CREATE OR REPLACE VIEW V_PC_SEL_LIG_COM AS
SELECT l.NO_COM, 
       l.NO_LIG_COM,
       c.COD_CLI,
       c.NO_DPT, 
       c.MODE_AFC_DPT,
       c.COD_TRA_1,
       c.COD_TRA_2, 
       c.COD_PTP_1,
       c.COD_PTP_2,
       c.COD_TOU,
       c.DAT_PREP,
       c.DAT_EXP,
       c.DAT_LIV,        
       l.NO_CMD,
	   u.TYP_CMD,
       u.NO_CDE,
       u.REF_CDE_CLI, 
       l.NO_LIG_CMD, 
       l.COD_USN, 
       l.COD_SOC, 
       l.COD_CLI_FINAL, 
       l.COD_PRO,
       l.COD_VA,
       l.COD_VL,
       l.TYP_LIG_COM,
       l.TYP_COL,
       l.COD_ATL_PRP,
       l.COD_QLF_TRV,        
       l.COD_PSS_AFC, 
       l.COD_ERR_PC_LIG_COM,  
       l.ETAT_ATV_PC_LIG_COM, 
       l.QTE_CDE,
       l.UNITE_CDE,
	   l.NIV_PRIO,
       NVL(l.QTE_VAL, 0)         QTE_VAL,        
       NVL(l.NB_PCE_CDE, 0)      NB_PCE_CDE,
       NVL(l.PDS_CDE, 0)         PDS_CDE,                         
       NVL(l.NB_COL_VAL, 0)      NB_COL_VAL, 
       NVL(l.NB_PCE_VAL, 0)      NB_PCE_VAL,
       NVL(l.NB_COL_CDE,0)	 NB_COL_CDE,
       NVL(l.PDS_NET_VAL, 0)     PDS_NET_VAL,
       NVL(l.PDS_BRUT_VAL, 0)    PDS_BRUT_VAL, 
       DECODE(su_bas_is_condi_etat_atv (l.etat_atv_pc_lig_com,'<','PRP0','PC_LIG_COM'),
              '1', NVL(l.COUT_TPS_PRP,0), 0)  COUT_TPS_PRP,  
       l.ETAT_PCL,
       l.ID_SESSION_LOCK, l.LST_FCT_LOCK, l.DAT_LOCK, l.OPE_LOCK, l.USR_LOCK,
       l.crit_sel_1,  l.crit_sel_2, l.crit_sel_3, 
       l.LIBRE_PC_LIG_COM_1, l.LIBRE_PC_LIG_COM_2, l.LIBRE_PC_LIG_COM_3, 
       l.LIBRE_PC_LIG_COM_4, l.LIBRE_PC_LIG_COM_5, l.LIBRE_PC_LIG_COM_6, 
       l.LIBRE_PC_LIG_COM_7, l.LIBRE_PC_LIG_COM_8, l.LIBRE_PC_LIG_COM_9, 
       l.LIBRE_PC_LIG_COM_10, 
       l.DAT_CREA, 
       l.DAT_MAJ, 
       l.USR_CREA, 
       l.USR_MAJ,
       c.ETAT_ATV_PC_ENT_COM,
       l.etat_autor_ord,
       l.etat_autor_pord,
       l.etat_autor_porl,
       l.id_res_porl,     
       l.no_rmp,
       c.no_bl_int
FROM pc_ent_cmd u, pc_ent_com c, pc_lig_com l  
WHERE l.no_com       = c.no_com       AND
      l.no_cmd		 = u.no_cmd AND
      EXISTS (SELECT 1
              FROM (SELECT lst_mod_vis x_lst_mod_vis,
                           lst_usn_vis x_lst_usn_vis,
                           lst_atl_vis x_lst_atl_vis,
                           lst_mag_vis x_lst_mag_vis,
                           lst_soc_vis x_lst_soc_vis,
                           lst_role x_lst_role,
                           typ_ope x_typ_ope,
                           cod_ope x_cod_ope,
                           cod_lan x_cod_lan
                    FROM TABLE (su_global_pkg.su_bas_get_row_ope_pipe)) f
              WHERE f.x_lst_usn_vis = '*' OR INSTR (f.x_lst_usn_vis, ';' || u.cod_usn || ';') > 0 OR u.cod_usn IS NULL) AND
      EXISTS (SELECT 1
              FROM (SELECT lst_mod_vis x_lst_mod_vis,
                           lst_usn_vis x_lst_usn_vis,
                           lst_atl_vis x_lst_atl_vis,
                           lst_mag_vis x_lst_mag_vis,
                           lst_soc_vis x_lst_soc_vis,
                           lst_role x_lst_role,
                           typ_ope x_typ_ope,
                           cod_ope x_cod_ope,
                           cod_lan x_cod_lan
                    FROM TABLE (su_global_pkg.su_bas_get_row_ope_pipe)) f
              WHERE f.x_lst_soc_vis = '*' OR INSTR (f.x_lst_soc_vis, ';' || l.cod_soc || ';') > 0 OR l.cod_soc IS NULL)
/ 
show errors;

-- Vue sur les lig_com et colis détail pour sélection
CREATE OR REPLACE VIEW V_PC_SEL_RGP_LIG_COM AS
SELECT 
       ud.NO_COM cpt_1,
       ud.NO_COM||ud.NO_LIG_COM cpt_2,
       ud.NO_COM, 
       ud.NO_LIG_COM, 
       v.COD_CLI, 
       v.NO_DPT, 
       v.MODE_AFC_DPT,
       v.COD_TRA_1,
       v.COD_TRA_2, 
       v.COD_PTP_1,
       v.COD_PTP_2,
       v.COD_TOU,
       v.DAT_PREP,
       v.DAT_EXP,
       v.DAT_LIV,          
       v.NO_CMD, 
	   v.TYP_CMD,
       v.NO_LIG_CMD,
       v.NO_CDE,
       v.REF_CDE_CLI, 
       v.COD_USN, 
       v.COD_SOC, 
       v.COD_CLI_FINAL, 
       v.COD_PRO,
       v.COD_VA, 
       v.COD_VL,
       v.qte_cde,
       v.unite_cde,
       v.TYP_LIG_COM, 
       j.TYP_UEE TYP_COL, 
       v.TYP_COL TYP_COL_LIG, 
	   v.NIV_PRIO,
       ud.COD_PRO_RES||'/'||ud.COD_VL_RES COD_XXX,
       j.COD_ATL_PRP,
       v.COD_QLF_TRV,  
       j.NO_UEE_REF,
       ud.NO_UEE,  
	   ud.NIV_PRIO	NIV_PRIO_UEE_DET,      
       NVL(j.COD_PSS_AFC,v.COD_PSS_AFC) COD_PSS_AFC,
       NVL(j.COD_ERR_PC_UEE,v.COD_ERR_PC_LIG_COM)     COD_ERR,
       j.ETAT_ATV_PC_UEE                              ETAT_ATV_PC_UEE,
       v.ETAT_ATV_PC_LIG_COM                          ETAT_ATV_PC_LIG_COM,
       j.ETAT_ATV_PC_UEE                              ETAT_ATV_PC_UEE_RGP,
       v.ETAT_ATV_PC_LIG_COM                          ETAT_ATV_PC_LIG_COM_RGP,
       ud.QTE_VAL,                 
       ud.NB_PCE_THEO                                 NB_PCE_CDE,           
       ud.PDS_THEO                                    PDS_CDE,       
       DECODE(j.typ_uee,'CD',DECODE(j.NB_PCE_VAL, 0, 0, 1) * (ud.NB_PCE_THEO/j.NB_PCE_THEO), j.nb_col_val) NB_COL_VAL,
       DECODE(j.no_uee_ref, j.no_uee, su_bas_conv_unite_to_one_sel (ud.cod_pro_res, ud.cod_vl_res, ud.nb_pce_theo,'P','C'), 
                                      DECODE(j.typ_uee,'CD',(ud.NB_PCE_THEO/j.NB_PCE_THEO),j.nb_col_theo)) NB_COL_CDE,
       ud.NB_PCE_VAL,
       ud.PDS_NET_VAL,
       ud.PDS_BRUT_VAL,
       su_bas_is_condi_etat_atv (j.etat_atv_pc_uee,'<','PRP0','PC_UEE') ETAT_NON_PRP,
       DECODE(su_bas_is_condi_etat_atv (j.etat_atv_pc_uee,'<','PRP0','PC_UEE'),
              '1',NVL(ud.TPS_PRP_PCE, 0)+(NVL(j.TPS_PRP_COL,0)*(ud.NB_PCE_THEO/j.NB_PCE_THEO)), 0)  COUT_TPS_PRP,  
       v.ETAT_PCL,
       v.ID_SESSION_LOCK, v.LST_FCT_LOCK, v.DAT_LOCK, v.OPE_LOCK, v.USR_LOCK, 
       v.crit_sel_1, v.crit_sel_2, v.crit_sel_3, 
       v.LIBRE_PC_LIG_COM_1, v.LIBRE_PC_LIG_COM_2, v.LIBRE_PC_LIG_COM_3, 
       v.LIBRE_PC_LIG_COM_4, v.LIBRE_PC_LIG_COM_5, v.LIBRE_PC_LIG_COM_6, 
       v.LIBRE_PC_LIG_COM_7, v.LIBRE_PC_LIG_COM_8, v.LIBRE_PC_LIG_COM_9, 
       v.LIBRE_PC_LIG_COM_10, 
       v.DAT_CREA, 
       v.DAT_MAJ, 
       v.USR_CREA, 
       v.USR_MAJ,
       v.ETAT_ATV_PC_ENT_COM,
       ud.NO_BOR_PIC,
       j.COD_UT,
       j.TYP_UT,
       j.COD_UT_SUP,
       j.TYP_UT_SUP,
       j.COD_UP,
       j.TYP_UP,
       ud.no_pos,
       ud.etat_atv_pc_uee_det,
       v.etat_autor_ord,
       v.etat_autor_pord,
       v.etat_autor_porl,
       v.no_rmp,
       j.no_rmp NO_RMP_UEE,
       v.no_bl_int,
       v.id_res_porl
FROM  v_pc_sel_lig_com v, pc_uee_det ud, pc_uee j
WHERE v.no_com = ud.no_com            AND
      v.no_lig_com = ud.no_lig_com    AND
      v.etat_pcl  = '1'               AND    -- Uniquement les lig_com colisées
      ud.no_uee   = j.no_uee          AND
      (j.no_uee <> nvl(j.no_uee_ref,'#NULL#') OR (j.no_uee = nvl(j.no_uee_ref,'#NULL#') AND ud.qte_theo > 0)) AND
      EXISTS (SELECT 1
              FROM (SELECT lst_mod_vis x_lst_mod_vis,
                           lst_usn_vis x_lst_usn_vis,
                           lst_atl_vis x_lst_atl_vis,
                           lst_mag_vis x_lst_mag_vis,
                           lst_soc_vis x_lst_soc_vis,
                           lst_role x_lst_role,
                           typ_ope x_typ_ope,
                           cod_ope x_cod_ope,
                           cod_lan x_cod_lan
                    FROM TABLE (su_global_pkg.su_bas_get_row_ope_pipe)) f
              WHERE f.x_lst_atl_vis = '*' OR INSTR (f.x_lst_atl_vis, ';' || j.cod_atl_prp || ';') > 0 OR j.cod_atl_prp IS NULL)
UNION  ALL         
SELECT 
       y.NO_COM cpt_1,
       y.NO_COM||y.NO_LIG_COM cpt_2,
       y.NO_COM, 
       y.NO_LIG_COM,
       y.COD_CLI,
       y.NO_DPT, 
       y.MODE_AFC_DPT,
       y.COD_TRA_1,
       y.COD_TRA_2, 
       y.COD_PTP_1,
       y.COD_PTP_2,
       y.COD_TOU,
       y.DAT_PREP,
       y.DAT_EXP,
       y.DAT_LIV,  
       y.NO_CMD, 
       y.TYP_CMD,
       y.NO_LIG_CMD, 
       y.NO_CDE,
       y.REF_CDE_CLI, 
       y.COD_USN, 
       y.COD_SOC, 
       y.COD_CLI_FINAL, 
       y.COD_PRO, 
       y.COD_VA, 
       y.COD_VL,
       y.qte_cde,
       y.unite_cde,
       y.TYP_LIG_COM, 
       y.TYP_COL,
       y.TYP_COL TYP_COL_LIG, 
       y.NIV_PRIO,
       y.COD_PRO||'/'||y.COD_VL COD_XXX,
       y.COD_ATL_PRP,
       y.COD_QLF_TRV, 
       NULL           NO_UEE_REF,
       NULL           NO_UEE, 
       NULL			  NIV_PRIO_UEE_DET,    
       y.COD_PSS_AFC, 
       y.COD_ERR_PC_LIG_COM       COD_ERR,
       'TMP'                      ETAT_ATV_PC_UEE,
       --y.ETAT_ATV_PC_LIG_COM    ETAT_ATV_PC_UEE,
       y.ETAT_ATV_PC_LIG_COM      ETAT_ATV_PC_LIG_COM,
       DECODE(su_bas_is_condi_etat_atv (y.ETAT_ATV_PC_LIG_COM,'>','PRP0','PC_LIG_COM'),
       '1','PRP0',y.ETAT_ATV_PC_LIG_COM)  ETAT_ATV_PC_UEE_RGP,  
       -- si pas de colis et ligne >= PRP0 alors on la considere comme preparée à 0 (PRP0)
       -- -> cas de ligne sans colis annulée et qui bascule à TCTF.
       --    ainsi on continue à la voir comme annulée
       DECODE(su_bas_is_condi_etat_atv (y.ETAT_ATV_PC_LIG_COM,'>','PRP0','PC_LIG_COM'),
       '1','PRP0',y.ETAT_ATV_PC_LIG_COM)  ETAT_ATV_PC_LIG_COM_RGP,  
       y.QTE_VAL,
       y.NB_PCE_CDE,
       y.PDS_CDE,                               
       y.NB_COL_VAL, 
       y.NB_COL_CDE,
       y.NB_PCE_VAL,
       y.PDS_NET_VAL,
       y.PDS_BRUT_VAL, 
       su_bas_is_condi_etat_atv (y.ETAT_ATV_PC_LIG_COM,'<','PRP0','PC_LIG_COM') ETAT_NON_PRP,
       y.COUT_TPS_PRP,
       y.ETAT_PCL,
       y.ID_SESSION_LOCK, y.LST_FCT_LOCK, y.DAT_LOCK, y.OPE_LOCK, y.USR_LOCK, 
       y.crit_sel_1, y.crit_sel_2, y.crit_sel_3,
       y.LIBRE_PC_LIG_COM_1, y.LIBRE_PC_LIG_COM_2, y.LIBRE_PC_LIG_COM_3, 
       y.LIBRE_PC_LIG_COM_4, y.LIBRE_PC_LIG_COM_5, y.LIBRE_PC_LIG_COM_6, 
       y.LIBRE_PC_LIG_COM_7, y.LIBRE_PC_LIG_COM_8, y.LIBRE_PC_LIG_COM_9, 
       y.LIBRE_PC_LIG_COM_10, 
       y.DAT_CREA, 
       y.DAT_MAJ, 
       y.USR_CREA, 
       y.USR_MAJ,
       y.ETAT_ATV_PC_ENT_COM,
       NULL NO_BOR_PIC,
       NULL COD_UT,
       NULL TYP_UT,
       NULL COD_UT_SUP,
       NULL TYP_UT_SUP,
       NULL COD_UP,
       NULL TYP_UP,
       NULL NO_POS,
       NULL ETAT_ATV_PC_UEE_DET,
       y.etat_autor_ord,
       y.etat_autor_pord,
       y.etat_autor_porl,
       y.no_rmp,
       NULL no_rmp_uee,
       y.no_bl_int,
       y.id_res_porl
FROM  V_PC_SEL_LIG_COM y
WHERE y.etat_pcl = '0' AND
	EXISTS (SELECT 1
              FROM (SELECT lst_mod_vis x_lst_mod_vis,
                           lst_usn_vis x_lst_usn_vis,
                           lst_atl_vis x_lst_atl_vis,
                           lst_mag_vis x_lst_mag_vis,
                           lst_soc_vis x_lst_soc_vis,
                           lst_role x_lst_role,
                           typ_ope x_typ_ope,
                           cod_ope x_cod_ope,
                           cod_lan x_cod_lan
                    FROM TABLE (su_global_pkg.su_bas_get_row_ope_pipe)) f
              WHERE f.x_lst_atl_vis = '*' OR INSTR (f.x_lst_atl_vis, ';' || y.cod_atl_prp || ';') > 0 OR y.cod_atl_prp IS NULL)
UNION  ALL         
SELECT 
       e.no_cmd cpt_1,
       e.no_cmd||l.no_lig_cmd cpt_2,
       'Cmd:'||ltrim(substr(lpad(e.no_cmd,20),-16)) NO_COM, 
       NULL NO_LIG_COM,
       e.COD_CLI,
       e.NO_DPT, 
       e.MODE_AFC_DPT,
       e.COD_TRA_1,
       e.COD_TRA_2, 
       e.COD_PTP_1,
       e.COD_PTP_2,
       e.COD_TOU,
       e.DAT_PREP,
       e.DAT_EXP,
       e.DAT_LIV,  
       e.NO_CMD, 
       e.TYP_CMD,
       l.NO_LIG_CMD, 
       e.NO_CDE,
       e.REF_CDE_CLI, 
       e.COD_USN, 
       e.COD_SOC, 
       l.COD_CLI_FINAL, 
       l.COD_PRO , 
       l.COD_VA , 
       l.COD_VL ,
       l.qte_cde,
       l.unite_cde,
       NULL TYP_LIG_COM, 
       'CC' TYP_COL,
       NULL  TYP_COL_LIG, 
       NULL NIV_PRIO,
       l.COD_PRO||'/'||l.COD_VL COD_XXX,
       NULL COD_ATL_PRP,
       l.COD_QLF_TRV, 
       NULL           NO_UEE_REF,
       NULL           NO_UEE, 
       NULL			  NIV_PRIO_UEE_DET,    
       NULL COD_PSS_AFC, 
       l.COD_ERR_PC_LIG_CMD       COD_ERR,
       'NINT' ETAT_ATV_PC_UEE,  
       '0'  ETAT_ATV_PC_LIG_COM,  
       'NINT' ETAT_ATV_PC_UEE_RGP,  
       '0'  ETAT_ATV_PC_LIG_COM_RGP,
       0 QTE_VAL,
       l.NB_PCE_CDE,
       l.PDS_CDE,                               
       0 NB_COL_VAL, 
       l.NB_COL_CDE,
       0 NB_PCE_VAL,
       0 PDS_NET_VAL,
       0 PDS_BRUT_VAL, 
       NULL ETAT_NON_PRP,
       0 COUT_TPS_PRP,
       '0' ETAT_PCL,
       l.ID_SESSION_LOCK, l.LST_FCT_LOCK, l.DAT_LOCK, l.OPE_LOCK, l.USR_LOCK, 
       NULL crit_sel_1, NULL crit_sel_2, NULL crit_sel_3,
       NULL LIBRE_PC_LIG_COM_1, NULL LIBRE_PC_LIG_COM_2, NULL LIBRE_PC_LIG_COM_3, 
       NULL LIBRE_PC_LIG_COM_4, NULL LIBRE_PC_LIG_COM_5, NULL LIBRE_PC_LIG_COM_6, 
       NULL LIBRE_PC_LIG_COM_7, NULL LIBRE_PC_LIG_COM_8, NULL LIBRE_PC_LIG_COM_9, 
       NULL LIBRE_PC_LIG_COM_10, 
       l.DAT_CREA, 
       l.DAT_MAJ, 
       l.USR_CREA, 
       l.USR_MAJ,
       'RGPM' ETAT_ATV_PC_ENT_COM,
       NULL NO_BOR_PIC,
       NULL COD_UT,
       NULL TYP_UT,
       NULL COD_UT_SUP,
       NULL TYP_UT_SUP,
       NULL COD_UP,
       NULL TYP_UP,
       NULL NO_POS,
       'NINT' ETAT_ATV_PC_UEE_DET,
       l.etat_autor_ord,
       l.etat_autor_pord,
       l.etat_autor_porl,
       NULL no_rmp,
       NULL no_rmp_uee,
       NULL no_bl_int,
       NULL id_res_porl
FROM   PC_LIG_CMD l, VF_PC_ENT_CMD e
WHERE e.no_cmd=l.no_cmd AND
    ( etat_atv_pc_lig_cmd ='CREA' OR etat_atv_pc_lig_cmd ='CREF' OR etat_atv_pc_lig_cmd ='CPLT') AND
    EXISTS (SELECT 1
              FROM (SELECT lst_mod_vis x_lst_mod_vis,
                           lst_usn_vis x_lst_usn_vis,
                           lst_atl_vis x_lst_atl_vis,
                           lst_mag_vis x_lst_mag_vis,
                           lst_soc_vis x_lst_soc_vis,
                           lst_role x_lst_role,
                           typ_ope x_typ_ope,
                           cod_ope x_cod_ope,
                           cod_lan x_cod_lan
                    FROM TABLE (su_global_pkg.su_bas_get_row_ope_pipe)) f
              WHERE f.x_lst_usn_vis = '*' OR INSTR (f.x_lst_usn_vis, ';' || e.cod_usn || ';') > 0 OR e.cod_usn IS NULL) AND
      EXISTS (SELECT 1
              FROM (SELECT lst_mod_vis x_lst_mod_vis,
                           lst_usn_vis x_lst_usn_vis,
                           lst_atl_vis x_lst_atl_vis,
                           lst_mag_vis x_lst_mag_vis,
                           lst_soc_vis x_lst_soc_vis,
                           lst_role x_lst_role,
                           typ_ope x_typ_ope,
                           cod_ope x_cod_ope,
                           cod_lan x_cod_lan
                    FROM TABLE (su_global_pkg.su_bas_get_row_ope_pipe)) f
              WHERE f.x_lst_soc_vis = '*' OR INSTR (f.x_lst_soc_vis, ';' || e.cod_soc || ';') > 0 OR e.cod_soc IS NULL)

/
show errors;

-- Vue sur les lig_com et colis détail avec cumul des qte
CREATE OR REPLACE VIEW V_PC_SEL_CUMUL_LIG_COM AS
SELECT y.NO_COM,
       y.NO_LIG_COM,
       y.CPT_1,
       y.CPT_2,
       y.COD_CLI,
       y.NO_DPT,
       y.MODE_AFC_DPT,
       y.COD_TRA_1,
       y.COD_TRA_2, 
       y.COD_PTP_1,
       y.COD_PTP_2,
       y.COD_TOU,
       y.DAT_PREP,
       y.DAT_EXP,
       y.DAT_LIV,
       y.NO_CMD,
	   y.TYP_CMD,
       y.NO_LIG_CMD,
       y.NO_CDE,
       y.REF_CDE_CLI,
       y.COD_USN,
       y.COD_SOC,
       y.COD_CLI_FINAL,
       y.COD_PRO,
       y.COD_VA,
       y.COD_VL,
       y.TYP_LIG_COM,
       y.TYP_COL,
       y.TYP_COL_LIG,
       y.COD_XXX,
       y.COD_ATL_PRP,
       y.COD_QLF_TRV,
       y.COD_PSS_AFC,
       y.COD_ERR,
       y.ETAT_ATV_PC_UEE,
       y.ETAT_ATV_PC_LIG_COM,
       y.QTE_CDE,
       y.UNITE_CDE,	  
	   y.NIV_PRIO,
       SUM(y.QTE_VAL)       QTE_VAL,
       SUM(y.NB_PCE_CDE)    NB_PCE_CDE,
       SUM(y.PDS_CDE)       PDS_CDE,
       SUM(y.NB_COL_VAL)    NB_COL_VAL,
       SUM(DECODE (y.TYP_COL, 'CC', y.NB_COL_CDE, 0)) NB_COL_CC_CDE,
       SUM(DECODE (y.TYP_COL, 'CD', y.NB_COL_CDE, 0)) NB_COL_CD_CDE,
       SUM(DECODE(y.etat_non_prp,'0',0,DECODE (y.TYP_COL, 'CC', y.NB_COL_CDE, 0)-DECODE (y.TYP_COL, 'CC', y.NB_COL_VAL, 0))) NB_COL_CC_AVAL,
       SUM(DECODE(y.etat_non_prp,'0',0,DECODE (y.TYP_COL, 'CD', y.NB_COL_CDE, 0)-DECODE (y.TYP_COL, 'CD', y.NB_COL_VAL, 0))) NB_COL_CD_AVAL,
       SUM(DECODE(y.etat_non_prp,'0',0,DECODE (y.TYP_COL, 'CC', y.NB_PCE_CDE, 0)-DECODE (y.TYP_COL, 'CC', y.NB_PCE_VAL, 0))) NB_PCE_CC_AVAL,
       SUM(DECODE(y.etat_non_prp,'0',0,DECODE (y.TYP_COL, 'CD', y.NB_PCE_CDE, 0)-DECODE (y.TYP_COL, 'CD', y.NB_PCE_VAL, 0))) NB_PCE_CD_AVAL,
       SUM(y.NB_PCE_VAL)    NB_PCE_VAL,
       SUM(y.PDS_NET_VAL)   PDS_NET_VAL,
       SUM(y.PDS_BRUT_VAL)  PDS_BRUT_VAL,
       SUM(DECODE(y.etat_non_prp,'0',0,y.COUT_TPS_PRP)) COUT_TPS_PRP,
       y.ETAT_PCL,
       y.ID_SESSION_LOCK, y.LST_FCT_LOCK, y.DAT_LOCK, y.OPE_LOCK, y.USR_LOCK,
       y.crit_sel_1, y.crit_sel_2, y.crit_sel_3,
       y.LIBRE_PC_LIG_COM_1, y.LIBRE_PC_LIG_COM_2, y.LIBRE_PC_LIG_COM_3,
       y.LIBRE_PC_LIG_COM_4, y.LIBRE_PC_LIG_COM_5, y.LIBRE_PC_LIG_COM_6,
       y.LIBRE_PC_LIG_COM_7, y.LIBRE_PC_LIG_COM_8, y.LIBRE_PC_LIG_COM_9,
       y.LIBRE_PC_LIG_COM_10,
       y.DAT_CREA,
       y.DAT_MAJ,
       y.USR_CREA,
       y.USR_MAJ,
       y.ETAT_ATV_PC_ENT_COM,
       y.NO_BOR_PIC,
       y.NO_UEE,
       y.NO_UEE_REF,
	   y.NIV_PRIO_UEE_DET,
       y.COD_UT,
       y.TYP_UT,
       y.COD_UT_SUP,
       y.TYP_UT_SUP,
       y.COD_UP,
       y.TYP_UP,
       y.NO_POS,
       y.ETAT_ATV_PC_UEE_DET,
       e.COD_ETAPE,
       y.etat_autor_ord,
       y.etat_autor_pord,
       y.etat_autor_porl,
       y.no_rmp,
       y.no_rmp_uee,
       y.no_bl_int,
       y.id_res_porl
FROM  V_PC_SEL_RGP_LIG_COM y, V_PC_SEL_ETAT_ATV e
WHERE e.etat_atv = y.etat_atv_pc_uee_rgp
GROUP BY y.NO_COM,
       y.NO_LIG_COM,
       y.CPT_1,
       y.CPT_2,
       y.COD_CLI,
       y.NO_DPT,
       y.MODE_AFC_DPT,
       y.COD_TRA_1,
       y.COD_TRA_2, 
       y.COD_PTP_1,
       y.COD_PTP_2,
       y.COD_TOU,
       y.DAT_PREP,
       y.DAT_EXP,
       y.DAT_LIV,
       y.NO_CMD,
	   y.TYP_CMD,
       y.NO_LIG_CMD,
       y.NO_CDE,
       y.REF_CDE_CLI,
       y.COD_USN,
       y.COD_SOC,
       y.COD_CLI_FINAL,
       y.COD_PRO,
       y.COD_VA,
       y.COD_VL,
       y.TYP_LIG_COM,
       y.TYP_COL,
       y.TYP_COL_LIG,
       y.COD_XXX,
       y.COD_ATL_PRP,
       y.COD_QLF_TRV,
       y.COD_PSS_AFC,
       y.COD_ERR,
       y.ETAT_ATV_PC_UEE,
       y.ETAT_ATV_PC_LIG_COM,
       y.QTE_CDE,
       y.UNITE_CDE,
	   y.NIV_PRIO,
       y.ETAT_PCL,
       y.ID_SESSION_LOCK, y.LST_FCT_LOCK, y.DAT_LOCK, y.OPE_LOCK, y.USR_LOCK,
       y.crit_sel_1, y.crit_sel_2, y.crit_sel_3,
       y.LIBRE_PC_LIG_COM_1, y.LIBRE_PC_LIG_COM_2, y.LIBRE_PC_LIG_COM_3,
       y.LIBRE_PC_LIG_COM_4, y.LIBRE_PC_LIG_COM_5, y.LIBRE_PC_LIG_COM_6,
       y.LIBRE_PC_LIG_COM_7, y.LIBRE_PC_LIG_COM_8, y.LIBRE_PC_LIG_COM_9,
       y.LIBRE_PC_LIG_COM_10,
       y.DAT_CREA,
       y.DAT_MAJ,
       y.USR_CREA,
       y.USR_MAJ,
       y.ETAT_ATV_PC_ENT_COM,
       y.NO_BOR_PIC,
       y.NO_UEE,
       y.NO_UEE_REF,
	   y.NIV_PRIO_UEE_DET,
       y.COD_UT,
       y.TYP_UT,
       y.COD_UT_SUP,
       y.TYP_UT_SUP,
       y.COD_UP,
       y.TYP_UP,
       y.NO_POS,
       y.ETAT_ATV_PC_UEE_DET,
       e.COD_ETAPE,
       y.etat_autor_ord,
       y.etat_autor_pord,
       y.etat_autor_porl,
       y.no_rmp,
       y.no_rmp_uee,
       y.no_bl_int,
       y.id_res_porl
/	   
show errors;

-- Vue sur les lig_com et colis détail avec cumul des qte
CREATE OR REPLACE VIEW V_PC_SEL_ETAPE_LIG_COM AS
SELECT y.NO_COM,
       y.NO_LIG_COM,
       y.COD_CLI,
       y.NO_DPT,
       y.MODE_AFC_DPT,
       y.COD_TRA_1,
       y.COD_TRA_2,
       y.COD_PTP_1,
       y.COD_PTP_2,
       y.COD_TOU,
       y.DAT_PREP,
       y.DAT_EXP,
       y.DAT_LIV,
       y.NO_CMD,
       y.TYP_CMD,
       y.NO_LIG_CMD,
       y.NO_CDE,
       y.REF_CDE_CLI,
       y.COD_USN,
       y.COD_SOC,
       y.COD_CLI_FINAL,
       y.COD_PRO,
       y.COD_VA,
       y.COD_VL,
       y.TYP_LIG_COM,
       y.TYP_COL,
       y.COD_ATL_PRP,
       y.COD_QLF_TRV,
       y.COD_PSS_AFC,
       (SELECT b.lib_pss_lan FROM VF_SU_PSS b WHERE b.cod_pss = y.cod_pss_afc) LIB_PSS_AFC,
       y.COD_ERR,
       y.ETAT_ATV_PC_UEE_RGP,
       y.ETAT_ATV_PC_UEE,
       y.ETAT_ATV_PC_LIG_COM_RGP,
       y.ETAT_ATV_PC_LIG_COM,
       y.QTE_CDE,
       y.UNITE_CDE,
       y.NIV_PRIO,
       y.COD_UT_SUP,
       y.TYP_UT_SUP,
       y.cod_up,
       y.typ_up,
       SUM(y.QTE_VAL)       QTE_VAL,
       SUM(y.NB_PCE_CDE)    NB_PCE_CDE,
       SUM(y.PDS_CDE)       PDS_CDE,
       SUM(y.NB_COL_VAL)    NB_COL_VAL,
       SUM(DECODE (y.TYP_COL, 'CC', y.NB_COL_CDE, 0)) NB_COL_CC_CDE,
       SUM(DECODE (y.TYP_COL, 'CD', y.NB_COL_CDE, 0)) NB_COL_CD_CDE,
       SUM(DECODE(y.etat_non_prp,'0',0,DECODE (y.TYP_COL, 'CC', y.NB_COL_CDE, 0)-DECODE (y.TYP_COL, 'CC', y.NB_COL_VAL, 0))) NB_COL_CC_AVAL,
       SUM(DECODE(y.etat_non_prp,'0',0,DECODE (y.TYP_COL, 'CD', y.NB_COL_CDE, 0)-DECODE (y.TYP_COL, 'CD', y.NB_COL_VAL, 0))) NB_COL_CD_AVAL,
       SUM(DECODE(y.etat_non_prp,'0',0,DECODE (y.TYP_COL, 'CC', y.NB_PCE_CDE, 0)-DECODE (y.TYP_COL, 'CC', y.NB_PCE_VAL, 0))) NB_PCE_CC_AVAL,
       SUM(DECODE(y.etat_non_prp,'0',0,DECODE (y.TYP_COL, 'CD', y.NB_PCE_CDE, 0)-DECODE (y.TYP_COL, 'CD', y.NB_PCE_VAL, 0))) NB_PCE_CD_AVAL,
       SUM(y.NB_PCE_VAL)    NB_PCE_VAL,
       SUM(y.PDS_NET_VAL)   PDS_NET_VAL,
       SUM(y.PDS_BRUT_VAL)  PDS_BRUT_VAL,
       SUM(DECODE(y.etat_non_prp,'0',0,y.COUT_TPS_PRP)) COUT_TPS_PRP,
       y.ETAT_PCL,
       y.ID_SESSION_LOCK, y.LST_FCT_LOCK, y.DAT_LOCK, y.OPE_LOCK, y.USR_LOCK,
       y.crit_sel_1, y.crit_sel_2, y.crit_sel_3,
       y.LIBRE_PC_LIG_COM_1, y.LIBRE_PC_LIG_COM_2, y.LIBRE_PC_LIG_COM_3,
       y.LIBRE_PC_LIG_COM_4, y.LIBRE_PC_LIG_COM_5, y.LIBRE_PC_LIG_COM_6,
       y.LIBRE_PC_LIG_COM_7, y.LIBRE_PC_LIG_COM_8, y.LIBRE_PC_LIG_COM_9,
       y.LIBRE_PC_LIG_COM_10,
       y.DAT_CREA,
       y.DAT_MAJ,
       y.USR_CREA,
       y.USR_MAJ,
       (SELECT a.visual_lib FROM v_pc_sel_etat_atv a WHERE a.etat_atv = y.etat_atv_pc_uee_rgp) VISUAL_LIB, 
       (SELECT a.visual_qte FROM v_pc_sel_etat_atv a WHERE a.etat_atv = y.etat_atv_pc_uee_rgp) VISUAL_QTE, 
       (SELECT a.visual_qte0 FROM v_pc_sel_etat_atv a WHERE a.etat_atv = y.etat_atv_pc_uee_rgp) VISUAL_QTE0, 
       (SELECT a.cod_etape FROM v_pc_sel_etat_atv a WHERE a.etat_atv = y.etat_atv_pc_uee_rgp) COD_ETAPE, 
       (SELECT a.lib_etape FROM v_pc_sel_etat_atv a WHERE a.etat_atv = y.etat_atv_pc_uee_rgp) LIB_ETAPE, 
       (SELECT a.no_ord FROM v_pc_sel_etat_atv a WHERE a.etat_atv = y.etat_atv_pc_uee_rgp) NO_ORD, 
       y.ETAT_ATV_PC_ENT_COM,
       y.NO_BOR_PIC,
       y.NO_UEE,
       y.etat_autor_ord,
       y.etat_autor_pord,
       y.etat_autor_porl,
       y.id_res_porl,
       y.cod_xxx
FROM  V_PC_SEL_RGP_LIG_COM y
GROUP BY y.NO_COM,
       y.NO_LIG_COM,
       y.COD_CLI,
       y.NO_DPT,
       y.MODE_AFC_DPT,
       y.COD_TRA_1,
       y.COD_TRA_2,
       y.COD_PTP_1,
       y.COD_PTP_2,
       y.COD_TOU,
       y.DAT_PREP,
       y.DAT_EXP,
       y.DAT_LIV,
       y.NO_CMD,
       y.TYP_CMD,
       y.NO_LIG_CMD,
       y.NO_CDE,
       y.REF_CDE_CLI,
       y.COD_USN,
       y.COD_SOC,
       y.COD_CLI_FINAL,
       y.COD_PRO,
       y.COD_VA,
       y.COD_VL,
       y.TYP_LIG_COM,
       y.TYP_COL,
       y.COD_ATL_PRP,
       y.COD_QLF_TRV,
       y.COD_PSS_AFC,
       y.COD_ERR,
       y.ETAT_ATV_PC_UEE_RGP,
       y.ETAT_ATV_PC_UEE,
       y.ETAT_ATV_PC_LIG_COM_RGP,
       y.ETAT_ATV_PC_LIG_COM,
       y.QTE_CDE,
       y.UNITE_CDE,
       y.NIV_PRIO,
       y.COD_UT_SUP,
       y.TYP_UT_SUP,
       y.cod_up,
       y.typ_up,
       y.ETAT_PCL,
       y.ID_SESSION_LOCK, y.LST_FCT_LOCK, y.DAT_LOCK, y.OPE_LOCK, y.USR_LOCK,
       y.crit_sel_1, y.crit_sel_2, y.crit_sel_3,
       y.LIBRE_PC_LIG_COM_1, y.LIBRE_PC_LIG_COM_2, y.LIBRE_PC_LIG_COM_3,
       y.LIBRE_PC_LIG_COM_4, y.LIBRE_PC_LIG_COM_5, y.LIBRE_PC_LIG_COM_6,
       y.LIBRE_PC_LIG_COM_7, y.LIBRE_PC_LIG_COM_8, y.LIBRE_PC_LIG_COM_9,
       y.LIBRE_PC_LIG_COM_10,
       y.DAT_CREA,
       y.DAT_MAJ,
       y.USR_CREA,
       y.USR_MAJ,
       y.ETAT_ATV_PC_ENT_COM,
       y.NO_BOR_PIC,
       y.NO_UEE,
       y.etat_autor_ord,
       y.etat_autor_pord,
       y.etat_autor_porl,
       y.id_res_porl,
       y.cod_xxx
/	   
show errors;

-- *****************************
-- MODE FAST
-- *****************************
--
-- Vue sur les lig_com et colis détail pour sélection
--
CREATE OR REPLACE VIEW V_PC_SEL_RGP_LIG_COM_FAST AS
SELECT 
       u.NO_COM cpt_1,
       u.NO_COM, 
       NULL NO_LIG_COM, 
       v.COD_CLI, 
       v.NO_DPT, 
       v.MODE_AFC_DPT,
       v.COD_TRA_1,
       v.COD_TRA_2, 
       v.COD_PTP_1,
       v.COD_PTP_2,
       v.COD_TOU,
       v.DAT_PREP,
       v.DAT_EXP,
       v.DAT_LIV,          
       v.COD_USN, 
       v.COD_SOC, 
       u.typ_uee TYP_COL, 
       u.COD_ATL_PRP,
       u.COD_QLF_TRV,  
       u.NO_UEE_REF,
       u.NO_UEE,  
       u.COD_PSS_AFC,
       u.COD_ERR_PC_UEE                          COD_ERR,
       u.ETAT_ATV_PC_UEE                         ETAT_ATV_PC,
       u.ETAT_ATV_PC_UEE                         ETAT_ATV_PC_RGP,
       DECODE(u.no_uee_ref, u.no_uee, pc_bas_esm_nb_col_from_uee (u.no_uee, 'CDE'), 
              u.nb_col_theo) NB_COL_CDE,
       u.NB_COL_VAL,
       u.NB_PCE_THEO                             NB_PCE_CDE,           
       u.NB_PCE_VAL,
       u.PDS_THEO                                PDS_CDE,       
       u.PDS_NET_VAL,
       u.PDS_BRUT_VAL,
       su_bas_is_condi_etat_atv (u.etat_atv_pc_uee,'<','PRP0','PC_UEE') ETAT_NON_PRP,
       NVL(u.TPS_PRP_COL,0)*((u.NB_PCE_THEO-u.NB_PCE_VAL)/u.NB_PCE_THEO) COUT_TPS_PRP,  
       v.ETAT_ATV_PC_ENT_COM, 
       v.no_bl_int,
       u.COD_UT,
       u.TYP_UT,
       u.COD_UT_SUP,
       u.TYP_UT_SUP,
       u.COD_UP,
       u.TYP_UP, 
       u.no_rmp no_rmp_uee,
       NULL id_res_porl
FROM  pc_ent_com v, pc_uee u
WHERE  u.no_com = v.no_com AND u.NB_PCE_THEO > 0
UNION ALL
SELECT 
       u.NO_COM cpt_1,
       u.NO_COM, 
       NULL NO_LIG_COM, 
       v.COD_CLI, 
       v.NO_DPT, 
       v.MODE_AFC_DPT,
       v.COD_TRA_1,
       v.COD_TRA_2, 
       v.COD_PTP_1,
       v.COD_PTP_2,
       v.COD_TOU,
       v.DAT_PREP,
       v.DAT_EXP,
       v.DAT_LIV,          
       v.COD_USN, 
       v.COD_SOC, 
       u.typ_col TYP_COL, 
       u.COD_ATL_PRP,
       u.COD_QLF_TRV,  
       NULL NO_UEE_REF,
       NULL NO_UEE,  
       u.COD_PSS_AFC,
       u.COD_ERR_PC_LIG_COM                      COD_ERR,
       u.ETAT_ATV_PC_LIG_COM                     ETAT_ATV_PC,
       DECODE(su_bas_is_condi_etat_atv (u.etat_atv_pc_lig_com,'<','PRP0','PC_LIG_COM'),'1',u.ETAT_ATV_PC_LIG_COM,'PRP0') ETAT_ATV_PC_RGP,
       u.NB_COL_CDE,
       u.NB_COL_VAL,
       u.NB_PCE_CDE,           
       u.NB_PCE_VAL,
       u.PDS_CDE,       
       u.PDS_NET_VAL,
       u.PDS_BRUT_VAL,
       su_bas_is_condi_etat_atv (u.etat_atv_pc_lig_com,'<','PRP0','PC_LIG_COM') ETAT_NON_PRP,
       NVL(u.COUT_TPS_PRP,0) COUT_TPS_PRP,   
       v.ETAT_ATV_PC_ENT_COM,
       v.no_bl_int,
       NULL COD_UT,
       NULL TYP_UT,
       NULL COD_UT_SUP,
       NULL TYP_UT_SUP,
       NULL COD_UP,
       NULL TYP_UP,
       NULL NO_RMP_UEE,
       NULL id_res_porl
FROM  pc_ent_com v, pc_lig_com u
WHERE  u.no_com = v.no_com AND u.etat_pcl = '0'
UNION  ALL         
SELECT 
       e.no_cmd cpt_1,
       'Cmd:'||ltrim(substr(lpad(e.no_cmd,20),-16)) NO_COM, 
       NULL NO_LIG_COM,
       e.COD_CLI,
       e.NO_DPT, 
       e.MODE_AFC_DPT,
       e.COD_TRA_1,
       e.COD_TRA_2, 
       e.COD_PTP_1,
       e.COD_PTP_2,
       e.COD_TOU,
       e.DAT_PREP,
       e.DAT_EXP,
       e.DAT_LIV,  
       e.COD_USN, 
       e.COD_SOC, 
       'CC' TYP_COL,
       NULL COD_ATL_PRP,
       l.COD_QLF_TRV, 
       NULL           NO_UEE_REF,
       NULL           NO_UEE, 
       NULL COD_PSS_AFC, 
       l.COD_ERR_PC_LIG_CMD       COD_ERR,
       'NINT'                     ETAT_ATV_PC,  
       'NINT'                     ETAT_ATV_PC_RGP,  
       l.NB_COL_CDE,
       0 NB_COL_VAL, 
       l.NB_PCE_CDE,
       0 NB_PCE_VAL,
       l.PDS_CDE,                               
       0 PDS_NET_VAL,
       0 PDS_BRUT_VAL, 
       NULL ETAT_NON_PRP,
       0 COUT_TPS_PRP,
       'RGPM' ETAT_ATV_PC_ENT_COM,
       NULL no_bl_int,
       NULL COD_UT,
       NULL TYP_UT,
       NULL COD_UT_SUP,
       NULL TYP_UT_SUP,
       NULL COD_UP,
       NULL TYP_UP,
       NULL NO_RMP_UEE,
       NULL id_res_porl
FROM   PC_LIG_CMD l, VF_PC_ENT_CMD e
WHERE e.no_cmd=l.no_cmd AND
    ( etat_atv_pc_lig_cmd ='CREA' OR etat_atv_pc_lig_cmd ='CREF' OR etat_atv_pc_lig_cmd ='CPLT') AND
    EXISTS (SELECT 1
              FROM (SELECT lst_mod_vis x_lst_mod_vis,
                           lst_usn_vis x_lst_usn_vis,
                           lst_atl_vis x_lst_atl_vis,
                           lst_mag_vis x_lst_mag_vis,
                           lst_soc_vis x_lst_soc_vis,
                           lst_role x_lst_role,
                           typ_ope x_typ_ope,
                           cod_ope x_cod_ope,
                           cod_lan x_cod_lan
                    FROM TABLE (su_global_pkg.su_bas_get_row_ope_pipe)) f
              WHERE f.x_lst_usn_vis = '*' OR INSTR (f.x_lst_usn_vis, ';' || e.cod_usn || ';') > 0 OR e.cod_usn IS NULL) AND
      EXISTS (SELECT 1
              FROM (SELECT lst_mod_vis x_lst_mod_vis,
                           lst_usn_vis x_lst_usn_vis,
                           lst_atl_vis x_lst_atl_vis,
                           lst_mag_vis x_lst_mag_vis,
                           lst_soc_vis x_lst_soc_vis,
                           lst_role x_lst_role,
                           typ_ope x_typ_ope,
                           cod_ope x_cod_ope,
                           cod_lan x_cod_lan
                    FROM TABLE (su_global_pkg.su_bas_get_row_ope_pipe)) f
              WHERE f.x_lst_soc_vis = '*' OR INSTR (f.x_lst_soc_vis, ';' || e.cod_soc || ';') > 0 OR e.cod_soc IS NULL)
/ 
show errors;


--
-- Vue sur les lig_com et colis détail avec cumul des qte
--
/*
CREATE OR REPLACE VIEW V_PC_SEL_ETAPE_LIG_COM_FAST AS
SELECT b.cod_etape, b.lib_etape, b.no_ord, b.visual_lib, b.visual_qte, b.visual_qte0,
       a.cpt_1,
       a.no_com, 
       a.no_lig_com,
       a.cod_cli,
       a.no_dpt,
       a.mode_afc_dpt,
       a.cod_tra_1,
       a.cod_tra_2,
       a.cod_ptp_1,
       a.cod_ptp_2,
       a.cod_tou,
       a.dat_prep,
       a.dat_exp,
       a.dat_liv,
       a.cod_usn,
       a.cod_soc,
       a.typ_col,
       a.cod_atl_prp,
       a.cod_qlf_trv,
       a.no_uee_ref,
       a.no_uee,
       a.cod_pss_afc, 
       a.cod_err,
       a.cod_ut, a.typ_ut,
       a.cod_ut_sup, a.typ_ut_sup,
       a.cod_up, a.typ_up,
       a.etat_non_prp,
       a.etat_atv_pc_rgp,
       a.etat_atv_pc_ent_com,
       a.NB_COL_CDE,
       DECODE (a.typ_col,'CC',a.NB_COL_CDE,0)    NB_COL_CC_CDE,
       DECODE (a.typ_col,'CD',a.NB_COL_CDE,0)    NB_COL_CD_CDE,
       a.NB_COL_VAL,
       DECODE (a.typ_col,'CC',a.NB_COL_VAL,0)    NB_COL_CC_VAL,
       DECODE (a.typ_col,'CD',a.NB_COL_VAL,0)    NB_COL_CD_VAL,
       a.NB_PCE_CDE                              NB_PCE_CDE,           
       DECODE (a.typ_col,'CC',a.NB_PCE_CDE,0)    NB_PCE_CC_CDE,
       DECODE (a.typ_col,'CD',a.NB_PCE_CDE,0)    NB_PCE_CD_CDE,
       a.NB_PCE_VAL,
       DECODE (a.typ_col,'CC',a.NB_PCE_VAL,0)    NB_PCE_CC_VAL,
       DECODE (a.typ_col,'CD',a.NB_PCE_VAL,0)    NB_PCE_CD_VAL,
       a.PDS_CDE                                 PDS_CDE,       
       DECODE (a.typ_col,'CC',a.PDS_CDE,0)       PDS_CC_CDE,
       DECODE (a.typ_col,'CD',a.PDS_CDE,0)       PDS_CD_CDE,
       a.PDS_NET_VAL,
       DECODE (a.typ_col,'CC',a.PDS_NET_VAL,0)   PDS_NET_CC_VAL,
       DECODE (a.typ_col,'CD',a.PDS_NET_VAL,0)   PDS_NET_CD_VAL,
       a.PDS_BRUT_VAL,
       DECODE (a.typ_col,'CC',a.PDS_BRUT_VAL,0)  PDS_BRUT_CC_VAL,
       DECODE (a.typ_col,'CD',a.PDS_BRUT_VAL,0)  PDS_BRUT_CD_VAL,
       DECODE (etat_non_prp, '1', a.cout_tps_prp, 0) COUT_TPS_PRP, 
       DECODE (etat_non_prp, '1', a.nb_col_cde - a.nb_col_val, 0) NB_COL_AVAL,
       DECODE (a.typ_col,'CC', DECODE (etat_non_prp, '1', a.nb_col_cde - a.nb_col_val, 0),0) NB_COL_CC_AVAL,
       DECODE (a.typ_col,'CD', DECODE (etat_non_prp, '1', a.nb_col_cde - a.nb_col_val, 0),0) NB_COL_CD_AVAL,
       DECODE (etat_non_prp, '1', a.nb_pce_cde - a.nb_pce_val, 0) NB_PCE_AVAL,
       DECODE (a.typ_col,'CC', DECODE (etat_non_prp, '1', a.nb_pce_cde - a.nb_pce_val, 0),0) NB_PCE_CC_AVAL,
       DECODE (a.typ_col,'CD', DECODE (etat_non_prp, '1', a.nb_pce_cde - a.nb_pce_val, 0),0) NB_PCE_CD_AVAL,
       DECODE (etat_non_prp, '1', a.pds_cde - a.pds_net_val, 0) PDS_AVAL
  FROM V_PC_SEL_RGP_LIG_COM_FAST a, V_PC_SEL_ETAT_ATV b 
  WHERE a.etat_atv_pc_rgp = b.etat_atv 
/
show errors;
*/


--
-- Vue sur les lig_com et colis détail avec cumul des qte
--
CREATE OR REPLACE VIEW V_PC_SEL_CUMUL_LIG_COM_FAST AS
SELECT b.cod_etape, b.lib_etape, b.no_ord, b.visual_lib, b.visual_qte, b.visual_qte0,
       a.cpt_1,
       a.no_com, 
       a.no_lig_com,
       a.cod_cli,
       a.no_dpt,
       a.mode_afc_dpt,
       a.cod_tra_1,
       a.cod_tra_2,
       a.cod_ptp_1,
       a.cod_ptp_2,
       a.cod_tou,
       a.dat_prep,
       a.dat_exp,
       a.dat_liv,
       a.cod_usn,
       a.cod_soc,
       a.typ_col,
       a.cod_atl_prp,
       a.cod_qlf_trv,
       a.no_uee_ref,
       a.no_uee,
       a.cod_pss_afc, 
       a.cod_err,
       a.cod_ut, a.typ_ut,
       a.cod_ut_sup, a.typ_ut_sup,
       a.cod_up, a.typ_up,
       a.etat_non_prp,
       a.etat_atv_pc_rgp,
       a.etat_atv_pc_ent_com,
       a.NB_COL_CDE,
       a.no_bl_int,
       a.id_res_porl,
       DECODE (a.typ_col,'CC',a.NB_COL_CDE,0)    NB_COL_CC_CDE,
       DECODE (a.typ_col,'CD',a.NB_COL_CDE,0)    NB_COL_CD_CDE,
       a.NB_COL_VAL,
       DECODE (a.typ_col,'CC',a.NB_COL_VAL,0)    NB_COL_CC_VAL,
       DECODE (a.typ_col,'CD',a.NB_COL_VAL,0)    NB_COL_CD_VAL,
       a.NB_PCE_CDE                              NB_PCE_CDE,           
       DECODE (a.typ_col,'CC',a.NB_PCE_CDE,0)    NB_PCE_CC_CDE,
       DECODE (a.typ_col,'CD',a.NB_PCE_CDE,0)    NB_PCE_CD_CDE,
       a.NB_PCE_VAL,
       DECODE (a.typ_col,'CC',a.NB_PCE_VAL,0)    NB_PCE_CC_VAL,
       DECODE (a.typ_col,'CD',a.NB_PCE_VAL,0)    NB_PCE_CD_VAL,
       a.PDS_CDE                                 PDS_CDE,       
       DECODE (a.typ_col,'CC',a.PDS_CDE,0)       PDS_CC_CDE,
       DECODE (a.typ_col,'CD',a.PDS_CDE,0)       PDS_CD_CDE,
       a.PDS_NET_VAL,
       DECODE (a.typ_col,'CC',a.PDS_NET_VAL,0)   PDS_NET_CC_VAL,
       DECODE (a.typ_col,'CD',a.PDS_NET_VAL,0)   PDS_NET_CD_VAL,
       a.PDS_BRUT_VAL,
       DECODE (a.typ_col,'CC',a.PDS_BRUT_VAL,0)  PDS_BRUT_CC_VAL,
       DECODE (a.typ_col,'CD',a.PDS_BRUT_VAL,0)  PDS_BRUT_CD_VAL,
       DECODE (etat_non_prp, '1', a.cout_tps_prp, 0) COUT_TPS_PRP, 
       DECODE (etat_non_prp, '1', a.nb_col_cde - a.nb_col_val, 0) NB_COL_AVAL,
       DECODE (a.typ_col,'CC', DECODE (etat_non_prp, '1', a.nb_col_cde - a.nb_col_val, 0),0) NB_COL_CC_AVAL,
       DECODE (a.typ_col,'CD', DECODE (etat_non_prp, '1', a.nb_col_cde - a.nb_col_val, 0),0) NB_COL_CD_AVAL,
       DECODE (etat_non_prp, '1', a.nb_pce_cde - a.nb_pce_val, 0) NB_PCE_AVAL,
       DECODE (a.typ_col,'CC', DECODE (etat_non_prp, '1', a.nb_pce_cde - a.nb_pce_val, 0),0) NB_PCE_CC_AVAL,
       DECODE (a.typ_col,'CD', DECODE (etat_non_prp, '1', a.nb_pce_cde - a.nb_pce_val, 0),0) NB_PCE_CD_AVAL,
       DECODE (etat_non_prp, '1', a.pds_cde - a.pds_net_val, 0) PDS_AVAL
  FROM V_PC_SEL_RGP_LIG_COM_FAST a, V_PC_SEL_ETAT_ATV b 
  WHERE a.etat_atv_pc_rgp = b.etat_atv 
/
show errors;

